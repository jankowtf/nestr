% Generated by roxygen2 (4.0.2): do not edit by hand
\name{fromJson}
\alias{fromJson}
\title{From JSON (generic)}
\usage{
fromJson(input, where = parent.frame(), strict = FALSE, ...)
}
\arguments{
\item{input}{\strong{Signature argument}.
Object containing JSON input.}

\item{where}{\strong{Signature argument}.
Object containing location information.}

\item{strict}{\code{\link{logical}}.
\code{TRUE}:
\code{FALSE}:}

\item{Further}{arguments passed along to subsequent functions.
In particular:
\code{\link[jsonlite]{fromJSON}}.}
}
\description{
Retrieves value from a nested object structure based on a path-like
\code{input} with the last ID component being the actual object name that contains
the value.
}
\section{Path-like identifiers}{


Values for \code{id} are expected to be of structure \code{a/b/c/.../z},
i.e. path-like identifiers using a slash as separator.
The identifier is transformed to \code{a$b$c$...$z} and then in turn to a
valid \emph{get} or \code{assign} expression
(i.e. \code{a$b$c$...$z} and \code{a$b$c$...$z <- value}).
Of course, "atomic" paths (e.g. only \code{a}) are also valid.
}
\examples{
\dontrun{

## TODO: add example

}
}
\author{
Janko Thyson \email{janko.thyson@rappster.de}
}
\references{
\url{http://github.com/Rappster/nestr}
}
\seealso{
\code{
  	\link[nestr]{fromJson-char-env-method},
    \link[nestr]{setNested},
    \link[nestr]{rmNested}
}
}

